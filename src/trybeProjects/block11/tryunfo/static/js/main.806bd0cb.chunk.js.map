{"version":3,"sources":["components/Card.js","components/Form.js","components/Game.js","components/Filter.js","components/CardList.js","App.js","index.js"],"names":["Card","this","props","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","lowerCardRare","toLowerCase","replace","className","src","alt","Component","Form","hasTrunfo","isSaveButtonDisabled","onInputChange","onSaveButtonClick","htmlFor","type","name","value","onChange","maxLength","step","checked","disabled","onClick","Game","areRemainingCards","cards","currentPosition","length","onNextCard","onRestartGame","currentCard","remainingCards","String","padStart","Filter","onFilterInput","nameValue","rareValue","trunfoValue","placeholder","CardList","target","setState","filterCard","state","nameFilter","rareFilter","trunfoFilter","includes","onDelete","map","idx","App","startGame","shuffleCards","isGameStarted","savedCards","randomizedCards","sort","Math","random","nextCard","prevState","cleanCardInfo","removeCardFromList","removeCardName","isTrunfo","newCards","filter","Number","Attributes","isEmpty","Object","entries","find","prop","isSumGreaterThan210","reduce","a","c","isGreaterThanNinety","some","attr","isWorseThanZero","e","preventDefault","newCard","newSavedCards","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.806bd0cb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    const {\r\n      cardName,\r\n      cardDescription,\r\n      cardAttr1,\r\n      cardAttr2,\r\n      cardAttr3,\r\n      cardImage,\r\n      cardRare,\r\n      cardTrunfo,\r\n    } = this.props;\r\n\r\n    const lowerCardRare = cardRare.toLowerCase().replace(' ', '-');\r\n    return (\r\n      <div className={ `card card-${lowerCardRare}` }>\r\n        <p data-testid=\"name-card\" className={ `card-name card-name-${lowerCardRare}` }>\r\n          {cardName}\r\n        </p>\r\n        <img\r\n          data-testid=\"image-card\"\r\n          className=\"card-image\"\r\n          src={\r\n            cardImage\r\n            || 'https://cdn0.iconfinder.com/data/icons/computer-interface-outline/128/Computer_Outline_Expand-10-512.png'\r\n          }\r\n          alt={ cardName }\r\n        />\r\n        <p\r\n          data-testid=\"description-card\"\r\n          className={ `card-description card-description-${lowerCardRare}` }\r\n        >\r\n          {cardDescription}\r\n        </p>\r\n        <div>\r\n          <span data-testid=\"attr1-card\" className=\"card-attr\">\r\n            {`Clock: ${cardAttr1} GHz`}\r\n          </span>\r\n          <span data-testid=\"attr2-card\" className=\"card-attr\">\r\n            {`VRAM: ${cardAttr2} GB`}\r\n          </span>\r\n          <span data-testid=\"attr3-card\" className=\"card-attr\">\r\n            {`PCIe Gen: ${cardAttr3}.0`}\r\n          </span>\r\n          <span data-testid=\"rare-card\" className=\"card-rare\">\r\n            {cardRare}\r\n          </span>\r\n        </div>\r\n        {cardTrunfo ? (\r\n          <img\r\n            src=\"https://www.ebrink.com.br/media/catalog/category/super-trunfo-logo.jpg\"\r\n            alt=\"trunfo-logo\"\r\n            className=\"trunfo-logo\"\r\n            data-testid=\"trunfo-card\"\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  cardName: PropTypes.string.isRequired,\r\n  cardDescription: PropTypes.string.isRequired,\r\n  cardAttr1: PropTypes.number.isRequired,\r\n  cardAttr2: PropTypes.number.isRequired,\r\n  cardAttr3: PropTypes.number.isRequired,\r\n  cardImage: PropTypes.string.isRequired,\r\n  cardRare: PropTypes.string.isRequired,\r\n  cardTrunfo: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Form extends Component {\r\n  render() {\r\n    const {\r\n      cardName,\r\n      cardDescription,\r\n      cardAttr1,\r\n      cardAttr2,\r\n      cardAttr3,\r\n      cardImage,\r\n      cardRare,\r\n      cardTrunfo,\r\n      hasTrunfo,\r\n      isSaveButtonDisabled,\r\n      onInputChange,\r\n      onSaveButtonClick,\r\n    } = this.props;\r\n    return (\r\n      <form>\r\n        <legend>Adicionar nova carta</legend>\r\n        <label htmlFor=\"cardName\">\r\n          <span className=\"name-input-span\">Nome</span>\r\n          <input\r\n            type=\"text\"\r\n            data-testid=\"name-input\"\r\n            className=\"name-input\"\r\n            name=\"cardName\"\r\n            value={ cardName }\r\n            onChange={ onInputChange }\r\n            maxLength=\"24\"\r\n          />\r\n        </label>\r\n        <label htmlFor=\"cardDescription\">\r\n          <span className=\"description-input-span\">Descrição</span>\r\n          <textarea\r\n            data-testid=\"description-input\"\r\n            className=\"description-input\"\r\n            name=\"cardDescription\"\r\n            value={ cardDescription }\r\n            onChange={ onInputChange }\r\n          />\r\n        </label>\r\n        <label htmlFor=\"cardAttr1\">\r\n          <span className=\"attr-input-span\">Clock</span>\r\n          <input\r\n            type=\"number\"\r\n            data-testid=\"attr1-input\"\r\n            className=\"attr-input\"\r\n            name=\"cardAttr1\"\r\n            value={ cardAttr1 }\r\n            onChange={ onInputChange }\r\n            step=\"0.001\"\r\n          />\r\n          <span className=\"measurementUnit\">GHz</span>\r\n        </label>\r\n        <label htmlFor=\"cardAttr2\">\r\n          <span className=\"attr-input-span\">VRAM</span>\r\n          <input\r\n            type=\"number\"\r\n            data-testid=\"attr2-input\"\r\n            className=\"attr-input\"\r\n            name=\"cardAttr2\"\r\n            value={ cardAttr2 }\r\n            onChange={ onInputChange }\r\n          />\r\n          <span className=\"measurementUnit\">GB</span>\r\n        </label>\r\n        <label htmlFor=\"cardAttr1\">\r\n          <span className=\"attr-input-span\">PCIe Gen</span>\r\n          <input\r\n            type=\"number\"\r\n            data-testid=\"attr3-input\"\r\n            className=\"attr-input\"\r\n            name=\"cardAttr3\"\r\n            value={ cardAttr3 }\r\n            onChange={ onInputChange }\r\n          />\r\n        </label>\r\n        <label htmlFor=\"cardImage\">\r\n          <span className=\"image-input-span\">Imagem</span>\r\n          <input\r\n            type=\"text\"\r\n            data-testid=\"image-input\"\r\n            className=\"image-input\"\r\n            name=\"cardImage\"\r\n            value={ cardImage }\r\n            onChange={ onInputChange }\r\n          />\r\n        </label>\r\n        <label htmlFor=\"cardRare\">\r\n          <span className=\"rare-input-span\">Raridade</span>\r\n          <select\r\n            data-testid=\"rare-input\"\r\n            className=\"rare-input\"\r\n            name=\"cardRare\"\r\n            value={ cardRare }\r\n            onChange={ onInputChange }\r\n          >\r\n            <option value=\"Normal\">Normal</option>\r\n            <option value=\"Raro\">Raro</option>\r\n            <option value=\"Muito raro\">Muito raro</option>\r\n          </select>\r\n        </label>\r\n        {hasTrunfo ? (\r\n          <span>Você já tem um Super Trunfo em seu baralho</span>\r\n        ) : (\r\n          <label htmlFor=\"cardTrunfo\">\r\n            <input\r\n              type=\"checkbox\"\r\n              data-testid=\"trunfo-input\"\r\n              className=\"trunfo-input\"\r\n              name=\"cardTrunfo\"\r\n              checked={ cardTrunfo }\r\n              onChange={ onInputChange }\r\n            />\r\n            <span className=\"trunfo-input-span\">Super Tryunfo</span>\r\n          </label>\r\n        )}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          data-testid=\"save-button\"\r\n          disabled={ isSaveButtonDisabled }\r\n          onClick={ onSaveButtonClick }\r\n        >\r\n          Salvar\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  cardName: PropTypes.string.isRequired,\r\n  cardDescription: PropTypes.string.isRequired,\r\n  cardAttr1: PropTypes.number.isRequired,\r\n  cardAttr2: PropTypes.number.isRequired,\r\n  cardAttr3: PropTypes.number.isRequired,\r\n  cardImage: PropTypes.string.isRequired,\r\n  cardRare: PropTypes.string.isRequired,\r\n  cardTrunfo: PropTypes.bool.isRequired,\r\n  hasTrunfo: PropTypes.bool.isRequired,\r\n  isSaveButtonDisabled: PropTypes.bool.isRequired,\r\n  onInputChange: PropTypes.func.isRequired,\r\n  onSaveButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from './Card';\r\n\r\nclass Game extends Component {\r\n  areRemainingCards = () => {\r\n    const { cards, currentPosition } = this.props;\r\n\r\n    return cards.length - 1 - currentPosition > 0;\r\n  };\r\n\r\n  render() {\r\n    const { cards, currentPosition, onNextCard, onRestartGame } = this.props;\r\n    const { areRemainingCards } = this;\r\n    const currentCard = cards[currentPosition];\r\n    const remainingCards = String(cards.length - 1 - currentPosition).padStart(2, '0');\r\n    const {\r\n      cardName,\r\n      cardDescription,\r\n      cardAttr1,\r\n      cardAttr2,\r\n      cardAttr3,\r\n      cardImage,\r\n      cardRare,\r\n      cardTrunfo,\r\n    } = currentCard;\r\n    return (\r\n      <div className=\"Game\">\r\n        <div>\r\n          <div>\r\n            <Card\r\n              cardName={ cardName }\r\n              cardDescription={ cardDescription }\r\n              cardAttr1={ cardAttr1 }\r\n              cardAttr2={ cardAttr2 }\r\n              cardAttr3={ cardAttr3 }\r\n              cardImage={ cardImage }\r\n              cardRare={ cardRare }\r\n              cardTrunfo={ cardTrunfo }\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"next-card-button\"\r\n              onClick={ onNextCard }\r\n              disabled={ !areRemainingCards() }\r\n            >\r\n              Próxima carta &gt;\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <img src=\"./card-back.png\" alt=\"dummy-card\" className=\"dummy-card\" />\r\n            <span className=\"remaining-cards-span\">\r\n              Cartas restantes:\r\n              {' '}\r\n              {remainingCards}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {!areRemainingCards() ? (\r\n          <button type=\"button\" onClick={ onRestartGame } className=\"restart-game-button\">\r\n            Embaralhar cartas\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGame.propTypes = {\r\n  cards: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  currentPosition: PropTypes.number.isRequired,\r\n  onNextCard: PropTypes.func.isRequired,\r\n  onRestartGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Game;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    const { onFilterInput, nameValue, rareValue, trunfoValue } = this.props;\r\n    return (\r\n      <aside>\r\n        <h2>Filtros de busca</h2>\r\n        <div className=\"filters\">\r\n          <input\r\n            type=\"text\"\r\n            data-testid=\"name-filter\"\r\n            name=\"nameFilter\"\r\n            value={ nameValue }\r\n            onChange={ onFilterInput }\r\n            placeholder=\"Nome da carta\"\r\n          />\r\n          <select\r\n            data-testid=\"rare-filter\"\r\n            name=\"rareFilter\"\r\n            value={ rareValue }\r\n            onChange={ onFilterInput }\r\n          >\r\n            <option value=\"Todas\">Todas</option>\r\n            <option value=\"Normal\">Normal</option>\r\n            <option value=\"Raro\">Raro</option>\r\n            <option value=\"Muito raro\">Muito raro</option>\r\n          </select>\r\n          <label htmlFor=\"trunfoFilter\">\r\n            Super Trunfo\r\n            <input\r\n              type=\"checkbox\"\r\n              data-testid=\"trunfo-filter\"\r\n              name=\"trunfoFilter\"\r\n              checked={ trunfoValue }\r\n              onChange={ onFilterInput }\r\n            />\r\n          </label>\r\n        </div>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  onFilterInput: PropTypes.func.isRequired,\r\n  nameValue: PropTypes.string.isRequired,\r\n  rareValue: PropTypes.string.isRequired,\r\n  trunfoValue: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from './Card';\r\nimport Filter from './Filter';\r\n\r\nclass CardList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      nameFilter: '',\r\n      rareFilter: 'Todas',\r\n      trunfoFilter: false,\r\n    };\r\n  }\r\n\r\n  onFilterInput = ({ target: { name, value, type, checked } }) => {\r\n    value = type === 'checkbox' ? checked : value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  filterCard = (cardName, cardRare, cardTrunfo) => {\r\n    const { nameFilter, rareFilter, trunfoFilter } = this.state;\r\n\r\n    const isName = cardName.toLowerCase().includes(nameFilter.toLowerCase());\r\n    const isRare = rareFilter === 'Todas' ? true : rareFilter === cardRare;\r\n    const isTrunfo = trunfoFilter ? cardTrunfo : true;\r\n    return !!(isName && isRare && isTrunfo);\r\n  };\r\n\r\n  render() {\r\n    const { cards, onDelete } = this.props;\r\n    const { nameFilter, rareFilter, trunfoFilter } = this.state;\r\n    return (\r\n      <section>\r\n        <Filter\r\n          onFilterInput={ this.onFilterInput }\r\n          nameValue={ nameFilter }\r\n          rareValue={ rareFilter }\r\n          trunfoValue={ trunfoFilter }\r\n        />\r\n        <div className=\"Card-list\">\r\n          <h2>Lista de Cartas </h2>\r\n          {cards.map(\r\n            (\r\n              {\r\n                cardName,\r\n                cardDescription,\r\n                cardAttr1,\r\n                cardAttr2,\r\n                cardAttr3,\r\n                cardImage,\r\n                cardRare,\r\n                cardTrunfo,\r\n              },\r\n              idx,\r\n            ) => {\r\n              if (this.filterCard(cardName, cardRare, cardTrunfo)) {\r\n                return (\r\n                  <div key={ idx }>\r\n                    <Card\r\n                      cardName={ cardName }\r\n                      cardDescription={ cardDescription }\r\n                      cardAttr1={ cardAttr1 }\r\n                      cardAttr2={ cardAttr2 }\r\n                      cardAttr3={ cardAttr3 }\r\n                      cardImage={ cardImage }\r\n                      cardRare={ cardRare }\r\n                      cardTrunfo={ cardTrunfo }\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      data-testid=\"delete-button\"\r\n                      onClick={ () => onDelete(cardName, cardTrunfo) }\r\n                      className=\"delete-button fade-in\"\r\n                    >\r\n                      X\r\n                    </button>\r\n                  </div>\r\n                );\r\n              }\r\n              return false;\r\n            },\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCardList.propTypes = {\r\n  cards: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport Card from './components/Card';\r\nimport Form from './components/Form';\r\nimport Game from './components/Game';\r\nimport CardList from './components/CardList';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      cardName: 'Gigabyte RTX 3070 Vision',\r\n      cardDescription: `Placa de Vídeo Nvidia da Série Ampere com um\r\ndesign arrojado focado em criadores de conteúdo`,\r\n      cardAttr1: 1.815,\r\n      cardAttr2: 8,\r\n      cardAttr3: 4,\r\n      cardImage:\r\n        'https://images.kabum.com.br/produtos/fotos/130770/placa-de-video-gigabyte-nvidia-geforce-rtx-3070-vision-oc-8g-8gb-gddr6-gv-n3070vision-oc-8gd_1604413864_gg.jpg',\r\n      cardRare: 'Raro',\r\n      cardTrunfo: false,\r\n      savedCards: [],\r\n      randomizedCards: [],\r\n      currentCard: 0,\r\n      hasTrunfo: false,\r\n      isGameStarted: false,\r\n    };\r\n  }\r\n\r\n  startGame = () => {\r\n    this.shuffleCards();\r\n    this.setState({ isGameStarted: true, currentCard: 0 });\r\n  };\r\n\r\n  shuffleCards = () => {\r\n    const { savedCards } = this.state;\r\n    const RANDOM_FACTOR = 0.5;\r\n    this.setState({\r\n      randomizedCards: savedCards.sort(() => Math.random() - RANDOM_FACTOR),\r\n    });\r\n  };\r\n\r\n  nextCard = () => {\r\n    this.setState((prevState) => ({ currentCard: prevState.currentCard + 1 }));\r\n  };\r\n\r\n  cleanCardInfo = () => {\r\n    this.setState({\r\n      cardName: '',\r\n      cardDescription: '',\r\n      cardAttr1: 0,\r\n      cardAttr2: 0,\r\n      cardAttr3: 0,\r\n      cardImage: '',\r\n      cardRare: 'Normal',\r\n      cardTrunfo: false,\r\n    });\r\n  };\r\n\r\n  removeCardFromList = (removeCardName, isTrunfo) => {\r\n    const { savedCards } = this.state;\r\n    const newCards = savedCards.filter(({ cardName }) => cardName !== removeCardName);\r\n\r\n    this.setState({\r\n      savedCards: newCards,\r\n    });\r\n    if (isTrunfo) {\r\n      this.setState({\r\n        hasTrunfo: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  onInputChange = ({ target: { type, name, value, checked } }) => {\r\n    const MAX_DESCRIPTION_LINE_CHAR = 36;\r\n\r\n    if (type === 'checkbox') value = checked;\r\n    if (type === 'number') value = Number(value);\r\n\r\n    if (name === 'cardDescription' && value.length % MAX_DESCRIPTION_LINE_CHAR === 0) {\r\n      value += '\\n';\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  isSaveButtonDisabled = () => {\r\n    const { state } = this;\r\n    const { cardAttr1, cardAttr2, cardAttr3 } = state;\r\n    const Attributes = [Number(cardAttr1), Number(cardAttr2), Number(cardAttr3)];\r\n    const maxAttrPoints = 90;\r\n    const maxCardPoints = 210;\r\n\r\n    const isEmpty = Object.entries(state).find((prop) => prop[1] === '');\r\n    const isSumGreaterThan210 = Attributes.reduce((a, c) => a + c) > maxCardPoints;\r\n    const isGreaterThanNinety = Attributes.some((attr) => attr > maxAttrPoints);\r\n    const isWorseThanZero = Attributes.some((attr) => attr < 0);\r\n    return !!(isEmpty || isSumGreaterThan210 || isGreaterThanNinety || isWorseThanZero);\r\n  };\r\n\r\n  onSaveButtonClick = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      cardName,\r\n      cardDescription,\r\n      cardAttr1,\r\n      cardAttr2,\r\n      cardAttr3,\r\n      cardImage,\r\n      cardRare,\r\n      cardTrunfo,\r\n      savedCards,\r\n    } = this.state;\r\n\r\n    const newCard = {\r\n      cardName,\r\n      cardDescription,\r\n      cardAttr1,\r\n      cardAttr2,\r\n      cardAttr3,\r\n      cardImage,\r\n      cardRare,\r\n      cardTrunfo,\r\n    };\r\n\r\n    const newSavedCards = [...savedCards, newCard];\r\n\r\n    this.setState({\r\n      savedCards: newSavedCards,\r\n    });\r\n    if (cardTrunfo) this.setState({ hasTrunfo: true });\r\n    this.cleanCardInfo();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      cardName,\r\n      cardDescription,\r\n      cardAttr1,\r\n      cardAttr2,\r\n      cardAttr3,\r\n      cardImage,\r\n      cardRare,\r\n      cardTrunfo,\r\n      hasTrunfo,\r\n      savedCards,\r\n      isGameStarted,\r\n      randomizedCards,\r\n      currentCard,\r\n    } = this.state;\r\n    const {\r\n      startGame,\r\n      isSaveButtonDisabled,\r\n      onSaveButtonClick,\r\n      onInputChange,\r\n      removeCardFromList,\r\n      nextCard,\r\n    } = this;\r\n    return (\r\n      <>\r\n        <h1>Tryunfo - GPUs</h1>\r\n        {!isGameStarted ? (\r\n          <>\r\n            <section>\r\n              <Form\r\n                onInputChange={ onInputChange }\r\n                isSaveButtonDisabled={ isSaveButtonDisabled() }\r\n                onSaveButtonClick={ onSaveButtonClick }\r\n                hasTrunfo={ hasTrunfo }\r\n                cardName={ cardName }\r\n                cardDescription={ cardDescription }\r\n                cardAttr1={ cardAttr1 }\r\n                cardAttr2={ cardAttr2 }\r\n                cardAttr3={ cardAttr3 }\r\n                cardImage={ cardImage }\r\n                cardRare={ cardRare }\r\n                cardTrunfo={ cardTrunfo }\r\n              />\r\n              <div className=\"card-preview\">\r\n                <h2>Pré-visualização</h2>\r\n                <Card\r\n                  cardName={ cardName }\r\n                  cardDescription={ cardDescription }\r\n                  cardAttr1={ cardAttr1 }\r\n                  cardAttr2={ cardAttr2 }\r\n                  cardAttr3={ cardAttr3 }\r\n                  cardImage={ cardImage }\r\n                  cardRare={ cardRare }\r\n                  cardTrunfo={ cardTrunfo }\r\n                />\r\n              </div>\r\n            </section>\r\n            <CardList cards={ savedCards } onDelete={ removeCardFromList } />\r\n            <button\r\n              type=\"button\"\r\n              onClick={ startGame }\r\n              disabled={ savedCards.length < 1 }\r\n            >\r\n              Jogar\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <Game\r\n            cards={ randomizedCards }\r\n            currentPosition={ currentCard }\r\n            onNextCard={ nextCard }\r\n            onRestartGame={ startGame }\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}