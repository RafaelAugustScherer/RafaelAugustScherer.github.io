{"version":3,"sources":["services/userAPI.js","pages/Loading.js","pages/Login.js","components/AlbumCover.js","services/searchAlbumsAPI.js","pages/Search.js","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard.js","pages/Album.js","pages/Favorites.js","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","components/Header.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Loading","className","Component","Login","onChange","target","value","setState","onSubmit","e","a","state","preventDefault","isLoading","isUser","isNameValid","length","this","to","src","alt","type","placeholder","disabled","onClick","AlbumCover","props","artistName","collectionName","artworkUrl100","collectionId","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","collectionPrice","releaseDate","trackCount","Search","handleLoading","searchAlbumsAPIs","albums","status","result","prevState","undefined","resultName","idx","getMusics","id","request","requestJson","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","trackName","previewUrl","handleFavorite","isFavorite","controls","kind","htmlFor","checked","Album","componentDidMount","match","params","musics","favMusics","handleMusics","cpMusics","albumInfo","shift","find","track","some","push","Favorites","Profile","handleUser","ProfileEdit","areFieldsValid","areFilled","Object","values","isEmailValid","test","isSubmit","NotFound","Header","searchUser","isCurrent","pageToCheck","currentPage","isInnerPage","pageDivision","split","pageName","minPageName","toLowerCase","App","pagesObj","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.738bd945.chunk.js","sourcesContent":["const USER_KEY = 'user';\r\nconst SUCCESS_STATUS = 'OK';\r\n\r\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\r\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n\r\n// --------------------------------------------------------------------\r\n// A função simulateRequest simula uma requisição para uma API externa\r\n// Esse tipo de função que \"chama outra função\" é chamada de\r\n// \"currying function\" https://javascript.info/currying-partials\r\n// não se preocupe, estudaremos isso mais futuramente\r\n// --------------------------------------------------------------------\r\n\r\nconst simulateRequest = (response) => (callback) => callback(response);\r\n\r\nexport const getUser = () => new Promise((resolve) => {\r\n  let user = readUser();\r\n  if (user === null) {\r\n    user = {};\r\n  }\r\n  simulateRequest(user)(resolve);\r\n});\r\n\r\nexport const createUser = (user) => new Promise((resolve) => {\r\n  const emptyUser = {\r\n    name: '',\r\n    email: '',\r\n    image: '',\r\n    description: '',\r\n  };\r\n  saveUser({ ...emptyUser, ...user });\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n\r\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\r\n  saveUser({ ...updatedUser });\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n","import React, { Component } from 'react';\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"loading\">\r\n        <p>Carregando...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { createUser } from '../services/userAPI';\r\nimport Loading from './Loading';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: '',\r\n      isLoading: false,\r\n      isUser: false,\r\n    };\r\n  }\r\n\r\n  onChange = ({ target: { className, value } }) => {\r\n    this.setState({\r\n      [className]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    const { name } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.setState({ isLoading: true });\r\n    await createUser({ name });\r\n    this.setState({\r\n      isLoading: false,\r\n      isUser: true,\r\n    });\r\n  };\r\n\r\n  isNameValid = () => {\r\n    const { name } = this.state;\r\n    const MIN_NAME_LENGTH = 3;\r\n\r\n    return name.length >= MIN_NAME_LENGTH;\r\n  };\r\n\r\n  render() {\r\n    const { name, isLoading, isUser } = this.state;\r\n    const { onChange, onSubmit, isNameValid } = this;\r\n\r\n    return (\r\n      <div data-testid=\"page-login\" className=\"page-login\">\r\n        {isUser ? <Redirect to=\"/search\" /> : null}\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            <img src=\"./assets/logo.png\" alt=\"logo\" className=\"logo\" />\r\n            <form className=\"login-form\">\r\n              <input\r\n                type=\"text\"\r\n                onChange={ onChange }\r\n                value={ name }\r\n                className=\"name\"\r\n                data-testid=\"login-name-input\"\r\n                placeholder=\"Nome\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                data-testid=\"login-submit-button\"\r\n                disabled={ !isNameValid() }\r\n                onClick={ onSubmit }\r\n              >\r\n                Entrar\r\n              </button>\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AlbumCover extends Component {\r\n  render() {\r\n    const { artistName, collectionName, artworkUrl100, collectionId } = this.props;\r\n    return (\r\n      <Link\r\n        to={ `/album/${collectionId}` }\r\n        data-testid={ `link-to-album-${collectionId}` }\r\n        className=\"album-cover\"\r\n      >\r\n        <div>\r\n          <img src={ artworkUrl100 } alt=\"album-cover\" />\r\n          <p data-testid=\"album-name\">{collectionName}</p>\r\n          <p data-testid=\"artist-name\">{artistName}</p>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nAlbumCover.propTypes = {\r\n  artistName: PropTypes.string.isRequired,\r\n  collectionName: PropTypes.string.isRequired,\r\n  collectionId: PropTypes.number.isRequired,\r\n  artworkUrl100: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AlbumCover;\r\n","const searchAlbumsAPI = async (artist) => {\r\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\r\n\r\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\r\n\r\n  const APIResponse = await fetch(getAlbumsAPI);\r\n\r\n  const { results } = await APIResponse.json();\r\n\r\n  const response = results.map(\r\n    ({\r\n      artistId,\r\n      artistName,\r\n      collectionId,\r\n      collectionName,\r\n      collectionPrice,\r\n      artworkUrl100,\r\n      releaseDate,\r\n      trackCount,\r\n    }) => ({\r\n      artistId,\r\n      artistName,\r\n      collectionId,\r\n      collectionName,\r\n      collectionPrice,\r\n      artworkUrl100,\r\n      releaseDate,\r\n      trackCount,\r\n    }),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default searchAlbumsAPI;\r\n","import React, { Component } from 'react';\r\nimport AlbumCover from '../components/AlbumCover';\r\nimport searchAlbumsAPIs from '../services/searchAlbumsAPI';\r\nimport Loading from './Loading';\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: '',\r\n      isLoading: false,\r\n      result: {\r\n        status: undefined,\r\n        name: '',\r\n        albums: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  onChange = ({ target: { className, value } }) => {\r\n    this.setState({\r\n      [className]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.handleLoading();\r\n\r\n    const { name } = this.state;\r\n    const albums = await searchAlbumsAPIs(name);\r\n    const status = albums.length > 0;\r\n\r\n    this.setState({\r\n      name: '',\r\n      result: {\r\n        status,\r\n        name,\r\n        albums,\r\n      },\r\n    });\r\n    this.handleLoading();\r\n  };\r\n\r\n  isNameValid = () => {\r\n    const { name } = this.state;\r\n    const MIN_NAME_LENGTH = 2;\r\n\r\n    return name.length >= MIN_NAME_LENGTH;\r\n  };\r\n\r\n  handleLoading = () => this\r\n    .setState((prevState) => ({ isLoading: !prevState.isLoading }));\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      isLoading,\r\n      result: { status, name: resultName, albums },\r\n    } = this.state;\r\n    const { onChange, onSubmit, isNameValid } = this;\r\n\r\n    return (\r\n      <div data-testid=\"page-search\" className=\"page-search\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <form className=\"search-form\">\r\n            <h2>Pesquisar</h2>\r\n            <input\r\n              type=\"text\"\r\n              onChange={ onChange }\r\n              value={ name }\r\n              className=\"name\"\r\n              data-testid=\"search-artist-input\"\r\n              placeholder=\"Artista, albúm ou banda...\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              data-testid=\"search-artist-button\"\r\n              disabled={ !isNameValid() }\r\n              onClick={ onSubmit }\r\n            >\r\n              Pesquisar\r\n            </button>\r\n          </form>\r\n        )}\r\n        {status ? (\r\n          <h2>\r\n            Resultado de álbuns de:\r\n            {' '}\r\n            {resultName}\r\n          </h2>\r\n        ) : (\r\n          status !== undefined && <p>Nenhum álbum foi encontrado</p>\r\n        )}\r\n        <div className=\"search-result\">\r\n          {albums.map((props, idx) => (\r\n            <AlbumCover key={ idx } { ...props } />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","const getMusics = async (id) => {\r\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\r\n  const requestJson = await request.json();\r\n  return requestJson.results;\r\n};\r\n\r\nexport default getMusics;\r\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\r\nconst SUCCESS_STATUS = 'OK';\r\n\r\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\r\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\r\n}\r\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\r\n\r\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\r\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\r\n\r\n// --------------------------------------------------------------------\r\n// A função simulateRequest simula uma requisição para uma API externa\r\n// Esse tipo de função que \"chama outra função\" é chamada de\r\n// \"currying function\" https://javascript.info/currying-partials\r\n// não se preocupe, estudaremos isso futuramente.\r\n// --------------------------------------------------------------------\r\n\r\nconst simulateRequest = (response) => (callback) => callback(response);\r\n\r\nexport const getFavoriteSongs = () => new Promise((resolve) => {\r\n  const favoriteSongs = readFavoriteSongs();\r\n  simulateRequest(favoriteSongs)(resolve);\r\n});\r\n\r\nexport const addSong = (song) => new Promise((resolve) => {\r\n  if (song) {\r\n    const favoriteSongs = readFavoriteSongs();\r\n    saveFavoriteSongs([...favoriteSongs, song]);\r\n  }\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n\r\nexport const removeSong = (song) => new Promise((resolve) => {\r\n  const favoriteSongs = readFavoriteSongs();\r\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FaHeart, FaRegHeart } from 'react-icons/fa';\r\n\r\nclass MusicCard extends Component {\r\n  render() {\r\n    const { trackId, trackName, previewUrl, handleFavorite, isFavorite } = this.props;\r\n    return (\r\n      <div>\r\n        <p>{trackName}</p>\r\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\r\n          <track kind=\"captions\" />\r\n          O seu navegador não suporta o elemento\r\n          {' '}\r\n          <code>audio</code>\r\n          .\r\n        </audio>\r\n        <label htmlFor={ trackId } className=\"favorite-input\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id={ trackId }\r\n            data-testid={ `checkbox-music-${trackId}` }\r\n            onChange={ () => handleFavorite(this.props) }\r\n            checked={ isFavorite(trackName) }\r\n          />\r\n          Favorita\r\n        </label>\r\n        {isFavorite(trackName) ? (\r\n          <FaHeart\r\n            onClick={ () => handleFavorite(this.props) }\r\n            className=\"favorited-icon\"\r\n          />\r\n        ) : (\r\n          <FaRegHeart\r\n            onClick={ () => handleFavorite(this.props) }\r\n            className=\"favorite-icon\"\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMusicCard.propTypes = {\r\n  trackId: PropTypes.number.isRequired,\r\n  trackName: PropTypes.string.isRequired,\r\n  previewUrl: PropTypes.string.isRequired,\r\n  handleFavorite: PropTypes.func.isRequired,\r\n  isFavorite: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MusicCard;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AlbumCover from '../components/AlbumCover';\r\nimport getMusics from '../services/musicsAPI';\r\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\r\nimport MusicCard from '../components/MusicCard';\r\nimport Loading from './Loading';\r\n\r\nclass Album extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      albumInfo: undefined,\r\n      musics: [],\r\n      favMusics: [],\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.handleLoading();\r\n    const { match } = this.props;\r\n    const { id } = match.params;\r\n    const musics = await getMusics(id);\r\n    const favMusics = await getFavoriteSongs();\r\n\r\n    this.handleMusics(musics, favMusics);\r\n    this.handleLoading();\r\n  };\r\n\r\n  handleLoading = () => this\r\n    .setState((prevState) => ({ isLoading: !prevState.isLoading }));\r\n\r\n  handleMusics = (musics, favMusics) => {\r\n    const cpMusics = [...musics];\r\n    const albumInfo = cpMusics.shift();\r\n\r\n    this.setState({ albumInfo, musics: cpMusics, favMusics });\r\n  };\r\n\r\n  isFavorite = (trackName) => {\r\n    const { favMusics } = this.state;\r\n    if (favMusics !== undefined && favMusics.length > 0) {\r\n      return !!favMusics.find((song) => song.trackName === trackName);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  handleFavorite = async (track) => {\r\n    this.handleLoading();\r\n    let { favMusics } = this.state;\r\n\r\n    if (favMusics.some(({ trackName }) => trackName === track.trackName)) {\r\n      favMusics = favMusics.filter(({ trackName }) => trackName !== track.trackName);\r\n      await removeSong(track);\r\n    } else {\r\n      favMusics.push(track);\r\n      await addSong(track);\r\n    }\r\n    this.setState({ favMusics });\r\n    this.handleLoading();\r\n  };\r\n\r\n  render() {\r\n    const { musics, albumInfo, isLoading } = this.state;\r\n    const { handleFavorite, isFavorite } = this;\r\n    return (\r\n      <div data-testid=\"page-album\" className=\"page-album\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            {albumInfo && <AlbumCover { ...albumInfo } />}\r\n            <div className=\"album-musics\">\r\n              {musics.map((props, idx) => (\r\n                <MusicCard\r\n                  key={ idx }\r\n                  { ...props }\r\n                  handleFavorite={ handleFavorite }\r\n                  isFavorite={ isFavorite }\r\n                />\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAlbum.propTypes = {\r\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default Album;\r\n","import React, { Component } from 'react';\r\nimport { removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\r\nimport Loading from './Loading';\r\nimport MusicCard from '../components/MusicCard';\r\n\r\nclass Favorites extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      favMusics: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.handleLoading();\r\n\r\n    const favMusics = await getFavoriteSongs();\r\n    this.handleMusics(favMusics);\r\n\r\n    this.handleLoading();\r\n  };\r\n\r\n  handleMusics = (favMusics) => this.setState({ favMusics });\r\n\r\n  handleLoading = () => this\r\n    .setState((prevState) => ({ isLoading: !prevState.isLoading }));\r\n\r\n  handleFavorite = async (track) => {\r\n    this.handleLoading();\r\n    let { favMusics } = this.state;\r\n\r\n    favMusics = favMusics.filter(({ trackName }) => trackName !== track.trackName);\r\n    this.setState({ favMusics });\r\n    await removeSong(track);\r\n\r\n    this.handleLoading();\r\n  };\r\n\r\n  render() {\r\n    const { favMusics, isLoading } = this.state;\r\n    const { handleFavorite } = this;\r\n    return (\r\n      <div data-testid=\"page-favorites\" className=\"page-favorites\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            {favMusics.map((props, idx) => (\r\n              <MusicCard\r\n                key={ idx }\r\n                { ...props }\r\n                isFavorite={ () => true }\r\n                handleFavorite={ handleFavorite }\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorites;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaUserCircle } from 'react-icons/fa';\r\nimport { getUser } from '../services/userAPI';\r\nimport Loading from './Loading';\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      user: '',\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.handleLoading();\r\n\r\n    const user = await getUser();\r\n    this.handleUser(user);\r\n\r\n    this.handleLoading();\r\n  };\r\n\r\n  handleUser = (user) => this.setState({ user });\r\n\r\n  handleLoading = () => this\r\n    .setState((prevState) => ({ isLoading: !prevState.isLoading }));\r\n\r\n  render() {\r\n    const {\r\n      user: { name, email, image, description },\r\n      isLoading,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div data-testid=\"page-profile\" className=\"page-profile\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <div className=\"profile-info\">\r\n            <div>\r\n              {image ? (\r\n                <img\r\n                  src={ image }\r\n                  alt=\"profile\"\r\n                  className=\"profile-image\"\r\n                  data-testid=\"profile-image\"\r\n                />\r\n              ) : (\r\n                <FaUserCircle className=\"profile-image\" />\r\n              )}\r\n              <button type=\"button\" className=\"edit-profile-button\">\r\n                <Link to=\"/profile/edit\">Editar perfil</Link>\r\n              </button>\r\n            </div>\r\n            <p>Name:</p>\r\n            <p className=\"profile-small\">{name}</p>\r\n            <p>E-mail:</p>\r\n            <p className=\"profile-small\">{email}</p>\r\n            <p>Description:</p>\r\n            <p className=\"profile-small\">{description}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { FaUserCircle } from 'react-icons/fa';\r\nimport { getUser, updateUser } from '../services/userAPI';\r\nimport Loading from './Loading';\r\n\r\nclass ProfileEdit extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      user: {},\r\n      isLoading: false,\r\n      isSubmit: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.handleLoading();\r\n\r\n    const user = await getUser();\r\n    this.handleUser(user);\r\n\r\n    this.handleLoading();\r\n  };\r\n\r\n  handleUser = (user) => this.setState({ user });\r\n\r\n  handleLoading = () => this\r\n    .setState((prevState) => ({ isLoading: !prevState.isLoading }));\r\n\r\n  areFieldsValid = () => {\r\n    const { user } = this.state;\r\n    const EMAIL_REGEX = /^[a-z0-9]*@[a-z0-9]*[.][a-z]{2,3}$/i;\r\n\r\n    const areFilled = !Object.values(user).some((value) => value === '');\r\n    const isEmailValid = EMAIL_REGEX.test(user.email);\r\n\r\n    return !!(areFilled && isEmailValid);\r\n  };\r\n\r\n  onChange = ({ target: { name, value } }) => this\r\n    .setState((state) => ({ user: { ...state.user, [name]: value } }));\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.handleLoading();\r\n\r\n    const { user } = this.state;\r\n    await updateUser(user);\r\n\r\n    this.handleLoading();\r\n    this.setState({ isSubmit: true });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user: { name, email, image, description },\r\n      isLoading,\r\n      isSubmit,\r\n    } = this.state;\r\n\r\n    const { onChange, onSubmit, areFieldsValid } = this;\r\n\r\n    return (\r\n      <div data-testid=\"page-profile-edit\" className=\"page-profile-edit\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <form>\r\n            <div>\r\n              {image ? (\r\n                <img\r\n                  src={ image }\r\n                  alt=\"profile\"\r\n                  className=\"profile-image\"\r\n                  data-testid=\"profile-image\"\r\n                />\r\n              ) : (\r\n                <FaUserCircle className=\"profile-image\" />\r\n              )}\r\n              <input\r\n                type=\"text\"\r\n                data-testid=\"edit-input-image\"\r\n                name=\"image\"\r\n                onChange={ onChange }\r\n                value={ image }\r\n              />\r\n            </div>\r\n            <p>Nome:</p>\r\n            <p>\r\n              <input\r\n                type=\"text\"\r\n                data-testid=\"edit-input-name\"\r\n                name=\"name\"\r\n                onChange={ onChange }\r\n                value={ name }\r\n              />\r\n            </p>\r\n            <p>E-mail:</p>\r\n            <p>\r\n              <input\r\n                type=\"email\"\r\n                data-testid=\"edit-input-email\"\r\n                name=\"email\"\r\n                onChange={ onChange }\r\n                value={ email }\r\n              />\r\n            </p>\r\n            <p>Descrição:</p>\r\n            <p>\r\n              <input\r\n                type=\"text\"\r\n                data-testid=\"edit-input-description\"\r\n                name=\"description\"\r\n                onChange={ onChange }\r\n                value={ description }\r\n              />\r\n            </p>\r\n            <button\r\n              type=\"submit\"\r\n              data-testid=\"edit-button-save\"\r\n              onClick={ onSubmit }\r\n              disabled={ !areFieldsValid() }\r\n            >\r\n              Salvar\r\n            </button>\r\n          </form>\r\n        )}\r\n        {isSubmit ? <Redirect to=\"/profile\" /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div data-testid=\"page-not-found\">\r\n        <p>Not Found</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { FaUserCircle } from 'react-icons/fa';\r\nimport { getUser } from '../services/userAPI';\r\nimport Loading from '../pages/Loading';\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      user: {},\r\n      isLoading: false,\r\n      isInnerPage: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.handleLoading();\r\n    await this.searchUser();\r\n    this.handleLoading();\r\n  };\r\n\r\n  handleLoading = () => this\r\n    .setState((prevState) => ({ isLoading: !prevState.isLoading }));\r\n\r\n  searchUser = async () => {\r\n    const user = await getUser();\r\n    this.setState({ user });\r\n  };\r\n\r\n  isCurrent = (pageToCheck) => {\r\n    const { currentPage } = this.props;\r\n    const { isInnerPage } = this.state;\r\n    const pageDivision = currentPage.split('/');\r\n    if (pageDivision[2] && !isInnerPage) {\r\n      this.setState({ isInnerPage: true });\r\n    }\r\n\r\n    return pageDivision[1] === pageToCheck\r\n      ? 'selected'\r\n      : '';\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user: { name, image },\r\n      isLoading,\r\n      isInnerPage,\r\n    } = this.state;\r\n    const { isCurrent } = this;\r\n    const pages = ['Search', 'Favorites', 'Profile'];\r\n\r\n    return (\r\n      <div data-testid=\"header-component\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <header>\r\n            <div>\r\n              <img\r\n                src={ `${isInnerPage ? '.' : ''}./assets/header-logo.png` }\r\n                alt=\"logo\"\r\n                className=\"header-logo\"\r\n              />\r\n              <div className=\"header-user\">\r\n                {image ? (\r\n                  <img src={ image } alt=\"profile\" className=\"profile-image\" />\r\n                ) : (\r\n                  <FaUserCircle className=\"profile-image\" />\r\n                )}\r\n                <span data-testid=\"header-user-name\">{name}</span>\r\n              </div>\r\n            </div>\r\n            <nav className=\"header-nav\">\r\n              {pages.map((pageName, idx) => {\r\n                const minPageName = pageName.toLowerCase();\r\n\r\n                return (\r\n                  <Link\r\n                    to={ `/${minPageName}` }\r\n                    key={ idx }\r\n                    data-testid={ `link-to-${minPageName}` }\r\n                    className={ isCurrent(minPageName) }\r\n                  >\r\n                    {pageName}\r\n                  </Link>\r\n                );\r\n              })}\r\n            </nav>\r\n          </header>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  currentPage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport Search from './pages/Search';\r\nimport Album from './pages/Album';\r\nimport Favorites from './pages/Favorites';\r\nimport Profile from './pages/Profile';\r\nimport ProfileEdit from './pages/ProfileEdit';\r\nimport NotFound from './pages/NotFound';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const pagesObj = [\r\n      {\r\n        path: '/search',\r\n        component: Search,\r\n      },\r\n      {\r\n        path: '/album/:id',\r\n        component: Album,\r\n      },\r\n      {\r\n        path: '/favorites',\r\n        component: Favorites,\r\n      },\r\n      {\r\n        path: '/profile',\r\n        component: Profile,\r\n      },\r\n      {\r\n        path: '/profile/edit',\r\n        component: ProfileEdit,\r\n      },\r\n    ];\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          {\r\n            pagesObj.map(({ path, component }, idx) => (\r\n              <Route key={ idx } exact path={ path }>\r\n                <Header currentPage={ path } />\r\n                <Route component={ component } />\r\n              </Route>\r\n            ))\r\n          }\r\n          <Route exact path=\"/\" component={ Login } />\r\n          <Route path=\"*\" component={ NotFound } />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}